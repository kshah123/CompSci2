/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package physicslab;
import java.util.Scanner;
/**
 *
 * @author Kush Shah
 */
public class PhysicsLab {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
       Scanner in = new Scanner(System.in);
       
       physics();
        
        System.out.println("Do you want to do another calculation (y or n)?");
        String yn = in.next();
        while(yn.equals("y")){
            physics();
            System.out.println("Do you want to do another calculation (y or n)?");
            yn = in.next();
        }
    }
    
    public static double dNoA(double v0, double vf, double t){
        double d = 0.5 *(v0 + vf) * t;
        return d;
    }
    public static double dNoVf(double v0, double a, double t){
        double d = (v0 * t) + (.5 * a * Math.pow(t, 2));
        return d;
    }
    public static double dNoT(double v0, double vf, double a){
        double d = (Math.pow(vf, 2) - Math.pow(v0, 2)) / (2 * a);
        return d;
    }
    public static double dNoV0(double vf, double a, double t){
        double d = .5 * ((2 * vf) - (a * t)) * t;
        return d;
    }
    public static double aNoD(double v0, double vf, double t){
        double a = (vf - v0) / t;
        return a;
    }
    public static double aNoVf(double v0, double d, double t){
        double a = ((d - v0 * t) / Math.pow(t,2)) * 2;
        return a;
    }
    public static double aNoT(double v0, double vf, double d){
        double a = (Math.pow(vf, 2) - Math.pow(v0, 2)) / (2 * d);
        return a;
    }
    public static double aNoV0(double vf, double d, double t){
        double a = ((2 * vf) - (2 * d)) / Math.pow(t, 2);
        return a;
    }
    public static double tNoD(double v0, double vf, double a){
        double t = (vf - v0) / a;
        return t;
    }
    public static double tNoA(double v0, double vf, double d){
        double t = (2*d) / (v0 + vf);
        return t;
    }
    public static double tNoVf(double v0, double a, double d){
        double t = Math.sqrt(2 * a * d) / a;
        return t;
    }
    public static double tNoV0(double vf, double a, double d){
        double t = -Math.sqrt(2 * a * d) / a;
        return t;
    }
    public static double vfNoD(double v0, double a, double t){
        double vf = v0 + (a * t);
        return vf;
    }
    public static double vfNoA(double v0, double d, double t){
        double vf = ((2 * d) / t) + v0;
        return vf;
    }
    public static double vfNoT(double v0, double a, double d){
        double vf = Math.sqrt(2 * a * d) / a;
        return vf;
    }
    public static double vfNoV0(double a, double d, double t){
        double vf = (d / t) + ((Math.sqrt(2 * a * d)) / 2);
        return vf;
    }
    public static double v0NoA(double vf, double d, double t){
        double v0 = ((2 * d) / t) - vf;
        return v0;
    }
    public static double v0NoD(double vf, double a, double t){
        double v0 = vf - (a * t);
        return v0;
    }
    public static double v0NoT(double vf, double a, double d){
        double v0 = Math.sqrt(2 * a * d) + vf;
        return v0;
    }
    public static double v0NoVf(double a, double d, double t){
        double v0 = (d - (.5 * a * Math.pow(t, 2))) / t;
        return v0;
    }

    public static void physics(){
        Scanner in = new Scanner(System.in);
        
        int counter = 0;
        int counter2 = 0;
        int[] miss = new int[5];
        int[] given = new int[5];
        String[] ins = new String[4];

        while(counter != 2){
            System.out.println("In order, type in the values for the intiital velocity, final velocity, acceleration, distance and time, separate the values with a comma.");
            System.out.println("For only 2 of the values, input an '?'. I will solve for this value");
            
            counter = 0;
            counter2 = 0;
            ins = new String[4];
            miss = new int[ins.length + 1];
            given = new int[ins.length + 1];
            
            String input = in.next();
            ins = input.split(",");
            
        
            for(int i = 0; i < 5; i++){
                if(ins[i].equals("?")){
                    miss[counter] = i;
                    counter++;
                }
                else{
                    given[counter2] = i;
                    counter2++;
                }
            }
            if(counter != 2){
                System.out.println("That is not a valid input");
            }
        }
        
        int miss1 = miss[0];
        int miss2 = miss[1];
        
        String a = ins[given[0]];
        String b = ins[given[1]];
        String c = ins[given[2]];
        
        double d = Double.parseDouble(a);
        double e = Double.parseDouble(b);
        double f = Double.parseDouble(c);
        
        double missing1 = 0;
        double missing2 = 0;
        
        if(miss1 == 0 && miss2 == 1){
            missing1 = v0NoVf(d,e,f);
            missing2 = vfNoV0(d,e,f);
            
            System.out.println("V0: " + missing1);
            System.out.println("Vf: " + missing2);
        }
        else if(miss1 == 0 && miss2 == 2){
            missing1 = v0NoA(d,e,f);
            missing2 = aNoV0(d,e,f);
            
            System.out.println("V0: " + missing1);
            System.out.println("A: " + missing2);
        }
        else if(miss1 == 0 && miss2 == 3){
            missing1 = v0NoD(d,e,f);
            missing2 = dNoV0(d,e,f);
            
            System.out.println("V0: " + missing1);
            System.out.println("D: " + missing2);
        }
        else if(miss1 == 0 && miss2 == 4){
            missing1 = v0NoT(d,e,f);
            missing2 = tNoV0(d,e,f);
            
            System.out.println("V0: " + missing1);
            System.out.println("T: " + missing2);
        }
        else if(miss1 == 1 && miss2 == 2){
            missing1 = vfNoA(d,e,f);
            missing2 = aNoVf(d,e,f);
            
            System.out.println("Vf: " + missing1);
            System.out.println("A: " + missing2);
        }
        else if(miss1 == 1 && miss2 == 3){
            missing1 = vfNoD(d,e,f);
            missing2 = dNoVf(d,e,f);
            
            System.out.println("Vf: " + missing1);
            System.out.println("D: " + missing2);
        }
        else if(miss1 == 1 && miss2 == 4){
            missing1 = vfNoT(d,e,f);
            missing2 = tNoVf(d,e,f);
            
            System.out.println("Vf: " + missing1);
            System.out.println("T: " + missing2);
        }
        else if(miss1 == 2 && miss2 == 3){
            missing1 = aNoD(d,e,f);
            missing2 = dNoA(d,e,f);
            
            System.out.println("A: " + missing1);
            System.out.println("D: " + missing2);
        }
        else if(miss1 == 2 && miss2 == 4){
            missing1 = aNoT(d,e,f);
            missing2 = tNoA(d,e,f);
            
            System.out.println("A: " + missing1);
            System.out.println("T: " + missing2);
        }
        else if(miss1 == 3 && miss2 == 4){
            missing1 = dNoT(d,e,f);
            missing2 = tNoD(d,e,f);
            
            System.out.println("D: " + missing1);
            System.out.println("T: " + missing2);
        }
    }
}
